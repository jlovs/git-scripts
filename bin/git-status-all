#!/bin/sh
SRC="$(cd $(dirname "$0"); pwd)"
source "${SRC}/common/print.sh"
source "${SRC}/common/submodules.sh"

print_help()
{
	print_info "Shows the status for the root repository and all submodules."
	print_info ""
	print_info "usage: git status-all [<options>]"
	print_info ""
	print_info "    -s, --short	show status concisely"
	print_info "    -u, --untracked-files[=<mode>]"
    print_info "	show untracked files, optional modes: all, normal, no. (Default: all)"
}

status()
{
	print_info "Status in $1" 
	if [ "$short" = true ]
	then
		short_flag="-s"
	fi
	
	if [ "$untracked_files" = true ]
	then
		if [ -z $untracked_mode ]
		then
			untracked_flag="-u"
		else
			untracked_flag="-u$untracked_mode"
		fi
	fi
	git status $short_flag $untracked_flag || :  
}

status_submodules()
{
	get_submodules
	current_dir=$PWD
	for submodule in $submodules_in_project; do
		cd $submodule
		status $submodule
		cd $current_dir
	done
}

set_tabs

SHORT=hsu::
LONG=short,untracked-files::

# read the options
OPTS=$(getopt -s sh --options $SHORT --long $LONG --name "$0" -- "$@")

if [ $? != 0 ] ; then echo "Failed to parse options...exiting." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

# extract options and their arguments into variables.
while true ; do
  case "$1" in
	-h )
      print_help
	  exit 0
      shift
      ;;
    -s | --short )
      short=true
      shift
      ;;
    -u | --untracked-files )
      untracked_files=true
	  untracked_mode=$2
	  if ! [ -z $untracked_mode ]
	  then
		shift
	  fi
      shift
      ;;
    -- )
      shift
      break
      ;;
    *)
      break
      ;;
  esac
done

status "root" 
status_submodules