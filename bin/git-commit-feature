#!/bin/sh
SRC="$(cd $(dirname "$0"); pwd)"
source "${SRC}/common/print.sh"
source "${SRC}/common/submodules.sh"

print_help()
{
	print_info "Adds and commits all changes in root repository and all submodules."
	print_info "<commit-message> will be prefixed with the current branch name."
	print_info "master: <commit-message>"
	print_info ""
	print_info "-c, --commit-only	only commits staged changes"
	print_info "usage: git commit-feature [<options>] <commit-message>"
}

commit()
{
	if [ ! "$options" = "-c" ] && [ ! "$options" = "--commit-only" ]
	then 
		print_info "Adding all changes" 
		git add . || : 
	fi
	 
	print_info "Committing all changes" 
	git commit -m "$branch: $message"
}

commit_submodules()
{
	get_submodules
	current_dir=$PWD
	for submodule in $submodules_in_project; do
		cd $submodule
		print_info "In submodule $submodule"
		commit
		cd $current_dir
	done
}

check_arguments()
{
	echo $1 " " $2
	if [ $# -eq 0 ] || [ -z "$1" ]
	then
		print_error "<commit-message> is required"
		print_help
		exit 1
	fi

	if [ "$options" = "-h" ]
	then 
		set_tabs
		print_help
		exit 0
	fi

	if [ -z "$2" ]
	then
		message="$1"
		options=''
	fi
}
options="$1"
message="$2"

check_arguments "$1" "$2"

branch=$(git rev-parse --abbrev-ref HEAD)

on_branch "root" &&
submodules_on_branch &&
commit_submodules &&
commit