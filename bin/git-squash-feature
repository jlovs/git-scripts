#!/bin/sh
# git-squash-feature

SRC=$(cd $(dirname "$0"); pwd)
source "${SRC}/common/print.sh"

options=$1

if [ "$options" = "-h" ]
then 
    print "Squash all commits in feature branch into one commit for parent project and submodules. Also squashes the commit messages automatically" &&
	print "" &&
	print "Usage: git squash-feature [<options>]" &&
	print "" &&
    print "Options:" && 
	print "-h    Brings up this help" &&
    exit 0
fi

branch=$(git rev-parse --abbrev-ref HEAD)

squash_internal()
{
	print "Get number of commits since branched"
	local num=$(git rev-list --count HEAD ^master)
	print "Commits to squash: $num"
	print "Get commit messages since branched"
	commit_comments=$(git show -s --format=%B HEAD...HEAD~$num)
	print "Reset HEAD to origin/master"
	git reset --soft origin/master
	print "Commit squashed commits"
	git commit -am "$commit_comments"
}

squash()
{
    if [ -z $1 ]
    then
		squash_internal
	else
		current_dir=$PWD
		for submodule in $*; do
			cd submodule
			squash_internal
			cd current_dir
		done
	fi
}

print "Squash parent project feature branch commits" &&
squash &&
print "Squash all submodules feature branches commits" &&
squash $(git submodule | awk  '{print $2}') && 
print "Amend submodule revision changes to last commit in parent project" &&
git commit -a --amend --no-edit # Commit amend submodule changes if any