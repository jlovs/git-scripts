#!/bin/sh
SRC=$(cd "$(dirname "$0")"; pwd)
source "${SRC}/common/print.sh"
source "${SRC}/common/submodules.sh"

print_help()
{
	print_info "Push all changes in root repository and all submodules."
	print_info ""
	print_info "usage: git push-feature [<options>] [<remote>]"
	print_info ""
	print_info "    -f, --force	force updates"
	print_info "    --force-with-lease	forces update if ok"
}

push()
{
	print_info "Pushing $1"
	if [ "$force" = true ]
	then
		git push -f $remote
	elif [ "$force_with_lease" = true ]
	then
		git push --force-with-lease $remote
	else
		git push $remote
	fi
}

push_submodules()
{
	get_submodules
	current_dir=$PWD
	for submodule in $submodules_in_project; do
		cd $submodule
		push $submodule
		cd $current_dir
	done
}

check_arguments()
{
	if [ "$options" == "-h" ]
	then
		print_help
		exit 0
	fi
}

set_tabs

SHORT=fh
LONG=force,force-with-lease

# read the options
OPTS=$(getopt -s sh --options $SHORT --long $LONG --name "$0" -- "$@")

if [ $? != 0 ] ; then echo "Failed to parse options...exiting." >&2 ; exit 1 ; fi

eval set -- "$OPTS"

# extract options and their arguments into variables.
while true ; do
  case "$1" in
	-h )
      print_help
	  exit 0
      shift
      ;;
    -f | --force )
      force=true
      shift
      ;;
    --force-with-lease )
      force_with_lease=true
      shift
      ;;
    -- )
		remote=$2
		if [ -z $remote ]
		then
			print_info "Assuming origin as default remote"
			remote="origin"
		else
			shift
		fi
		shift
      break
      ;;
    *)
      break
      ;;
  esac
done

push "root" &&
push_submodules